
#pragma kernel CSMain
#define NUM_TREADS 8

float4 _Size;

RWStructuredBuffer<float> _Write;

[numthreads(NUM_TREADS,NUM_TREADS,NUM_TREADS)]
void CSMain (int3 id : SV_DispatchThreadID)
{

    int idxL = max(0, id.x-1) + id.y*_Size.x + id.z*_Size.x*_Size.y;
    int idxR = min(_Size.x-1, id.x+1) + id.y*_Size.x + id.z*_Size.x*_Size.y;
    
    int idxB = id.x + max(0, id.y-1)*_Size.x + id.z*_Size.x*_Size.y;
    int idxT = id.x + min(_Size.y-1, id.y+1)*_Size.x + id.z*_Size.x*_Size.y;
    
    int idxD = id.x + id.y*_Size.x + max(0, id.z-1)*_Size.x*_Size.y;
    int idxU = id.x + id.y*_Size.x + min(_Size.z-1, id.z+1)*_Size.x*_Size.y;
    
    int idx = id.x + id.y*_Size.x + id.z*_Size.x*_Size.y;
    
    float obstacle = 0;
    
    if(id.x-1 < 0) obstacle = 1;
    if(id.x+1 > (int)_Size.x-1) obstacle = 1;
    
    if(id.y-1 < 0) obstacle = 1;
    if(id.y+1 > (int)_Size.y-1) obstacle = 1;
    
    if(id.z-1 < 0) obstacle = 1;
    if(id.z+1 > (int)_Size.z-1) obstacle = 1;
    
    _Write[idx] = obstacle;
}




















